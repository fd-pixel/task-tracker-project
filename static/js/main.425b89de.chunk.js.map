{"version":3,"sources":["logo.svg","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","toggleShow","onClick","className","style","backgroundColor","Header","title","showAddTask","Task","task","deleteTask","toggleDone","isDone","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","addTask","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","name","type","placeholder","required","value","onChange","target","App","setTasks","setShowAddTask","a","Math","floor","random","newTask","length","deletedTaskId","filter","toggledId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425b89de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nconst Button = ({ color, text, toggleShow }) => {\n  return (\n    <div>\n      <button\n        onClick={toggleShow}\n        className=\"btn\"\n        style={{ backgroundColor: color }}\n      >\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, showAddTask, toggleShow }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button\n        color={showAddTask ? \"red\" : \"purple\"}\n        text={showAddTask ? \"Close Add Task Bar\" : \"Show Add Task Bar\"}\n        toggleShow={toggleShow}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, deleteTask, toggleDone }) => {\n  return (\n    <div\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\n      onDoubleClick={() => toggleDone(task.id)}\n    >\n      <h3>\n        {task.text}\n        <FaTimes\n          onClick={() => deleteTask(task.id)}\n          style={{ color: \"red\", cursor: \"pointer\" }}\n        />\n      </h3>\n      <h3>{task.day}</h3>\n    </div>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport Task from \"./Task\";\n\nconst Tasks = ({ tasks, deleteTask, toggleDone }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <h3>\n          <Task\n            key={task.id}\n            task={task}\n            deleteTask={deleteTask}\n            toggleDone={toggleDone}\n          />\n        </h3>\n      ))}\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React, { useState, useRef } from \"react\";\n//import serialize from 'form-serialize';\n\nconst AddTask = ({ addTask }) => {\n  // const text = useRef();\n  // const day = useRef();\n\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n\n  const handleTextChange = (e) => setText(e.target.value);\n  const handleDayChange = (e) => setDay(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //form-serialize\n    // var { text, day } = serialize(e.target, { hash: true });\n\n    !text ? alert(\"Please add a task\") : addTask({ text, day, isDone: false });\n\n    setText(\"\");\n    setDay(\"\");\n\n    // with useRef\n    // !text.current.value\n    //   ? alert('Please add a task')\n    //   : addTask({\n    //       text: text.current.value,\n    //       day: day.current.value,\n    //       isDone: false,\n    //     });\n\n    // text.current.value = '';\n    // day.current.value = '';\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"task\">Task</label>\n        <input\n          id=\"task\"\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"AddTask\"\n          //ref={text}\n          required\n          value={text}\n          onChange={handleTextChange}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"day\">Day & Time</label>\n        <input\n          id=\"day\"\n          name=\"day\"\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          //ref={day}\n          value={day}\n          onChange={handleDayChange}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Feb 5th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Feb 6th at 1:30pm\",\n      isDone: false,\n    },\n    {\n      id: 3,\n      text: \"Attend in-Class\",\n      day: \"Feb 7th at 20:00pm\",\n      isDone: false,\n    },\n  ]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  //Add Task\n\n  const addTask = (a) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = { id, ...a };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Delete Task\n  const deleteTask = (deletedTaskId) => {\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  };\n\n  //ToggleDone\n\n  const toggleDone = (toggledId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === toggledId ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  };\n  //ToogleShow\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        showAddTask={showAddTask}\n        toggleShow={toggleShow}\n      />\n      {showAddTask && <AddTask addTask={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}